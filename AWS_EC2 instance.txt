Building a Powerful Django Web App: From GitHub to EC2 with Jenkins and Docker:


https://youtu.be/ENH0SUHZPXI?si=QQcmTUjqV5rDVWHO

Deploy Django Application at A.W.S Using CICD pipelines

https://youtu.be/hvfvXPvRwdA?si=883PDeJ_FWvXiyhg 

Deploy process django application

1. EC2
2. GitHub
3. Jenkins
4. Docker
5. PostgreSQL
6. Django application

1. UAT,DEV,testing untayi servers docker lo add cheyali
2. GitHub lo code ni push cheyyaganey Jenkins job start ayyi automatic build command run avvali
3. Give me full step by step clear ga kavali
    
Set Up AWS S3 Bucket with Django for Static and Media Files
------------------------------------------------------------
https://youtu.be/Ko52pn1KXS0?si=6R5_PETYqB892aIl


Implement Amazon S3 Storage for Static and Media files in Django
------------------------------------------------------------------
https://youtu.be/JQVQcNN0cXE?si=fu_PP4zG3jEwVr5D



AWS How to Launch an EC2 instance:
------------------------------------
1. Go to EC2 Dashboard
2. Go to Instance
3. Launch Instance
4. Name and tags (test-demo)
5. Quick Start (Ubuntu)
6. Amazon Machine Image (AMI) ==>  Ubuntu Server 24.04 LTS (HVM), SSD Volume Type => Free tier eligible
7. Instance Type => t2.micro 
8. Key pair (login) 
     => Create new key pair => Click
     => Key pair name => e.g(test-demo-key-pair)
     => Key pair type => RSA
     => Private key file format
            => .pem
            => .ppk 
9. We'll create a new security group called 'launch-wizard-1' with the following rules:
        => Allow SSH traffic from
        => Allow HTTPS traffic from the internet
        => Allow HTTP traffic from the internet

Putty:
------
1. ping 35.200.237.194 (Public IP address)
2. sudo apt update
3. sudo apt install python3
4. python3 --version
5. sudo apt install python3-pip
6. pip3 --version
7. sudo apt install git -y
8. git --version
9. git clone https://github.com/gopalsrinivas/hotel_management_system.git

10. Jenkins install on Ubuntu

    > https://www.jenkins.io/doc/book/installing/linux/#debianubuntu
    > sudo apt install fontconfig openjdk-17-jre
    > java -version
    > sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
        https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    > echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]" \
        https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
        /etc/apt/sources.list.d/jenkins.list > /dev/null
    > sudo apt-get update
    > sudo apt-get install jenkins
    > which jenkins
    > service jenkins status
    > sudo ufw enable
    > sudo ufw allow 8080
    > sudo ufw reload
    > sudo ufw status
    > Add an inbound rule to allow traffic on port 8080.
       > Go to Security Tab
       > Go to Security groups
       > Edit inbound rules
       > Add rule
       > Add range 8080 
    > sudo cat /var/lib/jenkins/secrets/initialAdminPassword
    > 3d6f77f99a094775bdb4a71028c4f3b4 (add UI password)
    > add form (Jenkins)
    > manage jenkins
         > plugin (docker install)
    > 
          

